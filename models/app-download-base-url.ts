/* tslint:disable */
/* eslint-disable */
/**
 * Meroku API Documentation
 * Open API specs for Meroku APIs. These APIs are required to inteact with the registry in a safe, easy way. The recommended way to use in a project is to use the npm package published at [@merokudao/storekit-sdk](https://www.npmjs.com/package/@merokudao/storekit-sdk). This npmjs package is a wrapper around the api. You would still want to use the APIs if you're building on a different platform.  # Authentication - To learn more on Authentication and the benefits of using higher rate limit, [read this Meroku.xyz blog post](https://meroku.xyz/2023/06/08/meroku-api-updates/). - To request an API key [fill this developer access form](https://form.jotform.com/231576486954067) - You can try this UI without getting any API Key as well # Learn More - [How to build a dApp Store using Meroku APIs](https://docs.meroku.org/dapp-store-kit-docs/for-dapp-store-builders#api--sdk-1) - [Meroku Blog](https://meroku.xyz) # Support - [Support Discourse Group](https://meroku.discourse.group) # Stay Connected - [Follow us on Github](https://github.com/merokudao) - [Follow us on Twitter](https://twitter.com/MerokuStore) 
 *
 * OpenAPI spec version: 1.27
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface AppDownloadBaseUrl
 */
export interface AppDownloadBaseUrl {
    /**
     * The url to download the dapp.
     * @type {Blob}
     * @memberof AppDownloadBaseUrl
     */
    url: Blob;
    /**
     * The device/platform in which dapp could be intalled.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    platform?: AppDownloadBaseUrlPlatformEnum;
    /**
     * The dapp is supported on which architecture of the platform.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    architecture?: AppDownloadBaseUrlArchitectureEnum;
    /**
     * The minimum version of platform where this dapp could be functional.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    minVersion: AppDownloadBaseUrlMinVersionEnum;
    /**
     * The maximum version of platform where this dapp could be functional.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    maxVersion?: AppDownloadBaseUrlMaxVersionEnum;
    /**
     * The screen DPI for which the dApp is optimised. If it is not specified, it's assumed to be optimised for all resolutions.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    screenDPI?: string;
    /**
     * Unique id for dapp regading platform.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    packageId: string;
    /**
     * The version of the dapp that is available on dApp store.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    version: string;
    /**
     * The version code of the dapp that is available on dApp store.
     * @type {string}
     * @memberof AppDownloadBaseUrl
     */
    versionCode: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AppDownloadBaseUrlPlatformEnum {
    Android = 'android',
    Ios = 'ios'
}
/**
    * @export
    * @enum {string}
    */
export enum AppDownloadBaseUrlArchitectureEnum {
    ARMv7A = 'ARMv7-A',
    ARM64V8a = 'ARM64-v8a',
    X86 = 'x86',
    X8664 = 'x86_64',
    MIPS = 'MIPS',
    MIPS64 = 'MIPS64',
    ARMv8A = 'ARMv8-A',
    ARMv7s = 'ARMv7s',
    ARM64 = 'ARM64'
}
/**
    * @export
    * @enum {string}
    */
export enum AppDownloadBaseUrlMinVersionEnum {
    _1100 = 'android(11.0.0)',
    _1200 = 'android(12.0.0)',
    _1400 = 'android(14.0.0)'
}
/**
    * @export
    * @enum {string}
    */
export enum AppDownloadBaseUrlMaxVersionEnum {
    _1100 = 'android(11.0.0)',
    _1200 = 'android(12.0.0)',
    _1400 = 'android(14.0.0)'
}

